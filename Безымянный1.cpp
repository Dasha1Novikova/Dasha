    #include <iostream>
    using namespace std;
     
    /*inline bool badChar(char z){
       return z >= 'a' && z <'z' || z >= 'A' && z <= 'Z';
    }*/
     
    inline bool isSpace(char z){   //типа функция, при вызове которой мы просто проверяем не ровняется ли символ пробелу (как по мне ее проще в коде
    								//было просто записать
       return z == ' ';
    }
     
     
    void delStr(char *s){  //функция которая что-то удаляет) , в нее мы передаем вот это - delStr(z); (тоесть массив символов) в виде указателя *s
    	char *p = s;       // создаем указатель p и присваиваем ему s (тоесть создаем такой же массив символов p как и s -- в итоге єто же наш char z[]
    	char *r = s;
    	bool toCopy = true;	//булевская переменная - значение тру
    	bool q = true;      // еще одна значение тру
    	while (q){			//пока q верна, выполняем следуйщее
    	   		if (!(*s)){  //если конец строки, то (условие будет истонное когда будет конец строки??)
    			*s = ' ';	// то символу присваиваем пробел
    			q = false;  // q = false и - выход из цикла 
    		}
    		if ((*s >= 'a' && *s <'z') || (*s >= 'A' && *s <= 'Z')) //проверяем относится ли наша буква к латинским 
    			toCopy = false;  // если да, то переменной toCopy присваиваем false
    		if (isSpace(*s)){ //проверяем равен ли наш символ пробелу
    			if (toCopy){ // если (верно или ложь), если верно входим в условие
    				for ( ; r<=s;r++,p++) //ока массив r (менье, равно) массива s, массив p увеличиваем
    				
    					//если можно тут поподробней описать, а то я затрудняюсь) что именно здесь представляет s,r,p
    					*p = *r;	
    			}
    			toCopy = true;
    			r = s+1;
    		}
    		s++;
    	}
    	*p = 0;
    }
     
    int main() {
    	char z[] = "as";
    	delStr(z);
    	cout << z;
    	return 0;
    }
